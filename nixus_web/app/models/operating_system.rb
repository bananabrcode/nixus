require 'nixus_validation'

class OperatingSystem < ActiveRecord::Base
	#validations
	validates :cpu_architecture,
		presence: true,
		inclusion: {
			:in => NixusValidation::ValidCpuArchitectures,
			:message => :inclusion,
			unless: 'cpu_architecture.blank?'
		},
		uniqueness: {:scope => :cpe_name}
	#TODO
	#Inlude cpe_name format validation
	validates :cpe_name,
		presence: true,
		format: {
			:with => /[Cc][Pp][Ee]\:2\.3\:([HhOoAa]|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:([A-Za-z]{2,3}(\-([A-Za-z]{2,2}|)){0,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))\:((\?+|\*){,1}([-A-Z._a-z0-9]|(\\(\\|(\?|\*)|(\!|"|#|\$|%|&|'|\(|\)|\+|,|\/|\:|;|\<|\=|\>|@|\[|\]|\^|`|\{|\||\}|~))))+(\?+|\*){,1}|(\*|\-))/, 
			:message => :invalid,
			unless: 'cpe_name.blank?'
		}
	
	#scopes
	
	#associations
	has_many :client_applications, dependent: :restrict_with_error
	
	#custom setters
	def cpu_architecture=(arch)
		write_attribute(:cpu_architecture, arch.downcase)
	end
end
